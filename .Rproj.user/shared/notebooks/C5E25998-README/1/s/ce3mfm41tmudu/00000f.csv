"0","rm(list = ls()) # Clean your environment:
gc() # garbage collection - It can be useful to call gc after a large object has been removed, as this may prompt R to return memory to the operating system.
"
"1","      "
"1","    used"
"1","  (Mb)"
"1"," gc trigger"
"1","  (Mb)"
"1"," max used"
"1","  (Mb)"
"1","
Ncells"
"1"," 2232969"
"1"," 119.3"
"1","    4006491"
"1"," 214.0"
"1","  4006491"
"1"," 214.0"
"1","
Vcells"
"1"," 4601117"
"1","  35.2"
"1","   10146329"
"1","  77.5"
"1","  7391750"
"1","  56.4"
"1","
"
"0","library(tidyverse)"
"0","list.files('code/', full.names = T, recursive = T) %>% .[grepl('.R', .)] %>% as.list() %>% walk(~source(.))"
