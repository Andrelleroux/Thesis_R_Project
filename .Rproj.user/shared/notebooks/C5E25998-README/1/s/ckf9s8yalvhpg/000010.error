{"frames":[{"func":"list.files(\"code/\", full.names = T, recursive = T) %>% .[grepl(\".R\", \n    .)] %>% as.list() %>% walk(~source(.))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"walk(., ~source(.))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map(.x, .f, ..., .progress = .progress)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map_(\"list\", .x, .f, ..., .progress = .progress)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, \n    call_with_cleanup(map_impl, environment(), .type, .progress, \n        n, names, i))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, error = function(cnd) {\n    if (i == 0L) {\n    }\n    else { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"call_with_cleanup(map_impl, environment(), .type, .progress, \n    n, names, i)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".f(.x[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"source(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cnd) \n{\n    if (i == 0L) {\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cli::cli_abort(message, location = i, name = name, parent = cnd, \n    call = error_call, class = \"purrr_error_indexed\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang::abort(message, ..., call = call, use_cli_format = TRUE, \n    .frame = .frame)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in map(.x, .f, ..., .progress = .progress) : \n\u001B[1mCaused by error in `source()`:\u001B[22m\n\u001B[33m!\u001B[39m code/Model_Testing.R:3:66: unexpected ')'\n2: \n3: Model_Testing <- function(Pool_Mod = Pool, Two_Way_Mod = Two_way,)\n                                                                    ^\n"}